# Generated by Django 3.2 on 2022-09-29 21:04

import apps.utils.directory_path
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('regions', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, max_length=254, unique=True, verbose_name='email address')),
                ('email_confirmed', models.BooleanField(default=False, help_text='Set to true when the user have verified its email address.', verbose_name='verified')),
                ('is_teacher', models.BooleanField(db_column='IsTeacher', default=False)),
                ('is_owner', models.BooleanField(db_column='IsOwner', default=False)),
                ('is_director', models.BooleanField(db_column='IsDirector', default=False)),
                ('is_parent', models.BooleanField(db_column='IsParent', default=False)),
                ('is_school_staff', models.BooleanField(db_column='IsSchoolStaff', default=False)),
                ('is_student', models.BooleanField(db_column='IsStudent', default=False)),
                ('creation_date', models.DateField(blank=True, db_column='CreationDate', null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(blank=True, db_column='Address', null=True)),
                ('biography', models.TextField(blank=True, db_column='Biography', null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=15, null=True)),
                ('photo', models.ImageField(blank=True, db_column='Photo', null=True, upload_to=apps.utils.directory_path.user_profile_pic_directory_path, verbose_name='profile picture')),
                ('birthdate', models.DateField(blank=True, db_column='BirthDate', null=True)),
                ('is_public', models.BooleanField(db_column='IsPublic', default=True)),
                ('id_country', models.ForeignKey(blank=True, db_column='IdCountry', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='regions.countries')),
                ('id_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
